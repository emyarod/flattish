// material radio button toggle animation
@include keyframes(radio-toggle) {
  0% { background-size: 0; }
  100% { background-size: 100%; }
}

// checkbox
.res-nightmode input[type="checkbox"]:disabled {
  border-color: $dark-disabled-text !important;
}

input[type="checkbox"]:disabled {
  border-color: $light-disabled-text;
  cursor: auto;
}

$checkbox-selectors: (
  // login
  '.login-form-side',

  // login modal
  '.c-checkbox',

  // titlebox
  '.flairtoggle',
  '.sr_style_toggle',

  // settings page
  '.linefield',

  // submit page
  '.roundfield-content'
);
$night-checkbox-selectors: ();
$material-checkboxes: ();

@each $item in $checkbox-selectors {
  $material-checkboxes: append($material-checkboxes, unquote('#{$item} input[type="checkbox"]'), 'comma');
	$night-checkbox-selectors: append($night-checkbox-selectors, unquote('.res-nightmode #{$item} input[type="checkbox"]+label::before'), 'comma');
}

#{$night-checkbox-selectors} {
  border: 2px solid $dark-secondary-text !important;
}

#{$material-checkboxes} {
  // hide browser styles
  display: none;
  width: 0;
  height: 0;
  margin: 0;
  padding: 0;
  border: 0;
  opacity: 0;
  @include appearance(none);

  // material checkbox
  &+label::before {
    display: inline-block;
    height: 16px;
    width: 16px;
    margin-top: 3px;
    margin-right: 4px;
    content: "";
    border: 2px solid $light-secondary-text;
    border-radius: 2px;
    cursor: pointer;
  }

  // appearance when checked
  &:checked+label::before {
    border-color: $primary !important;
    background: $primary url(%%spritesheet%%) -246px -138px;
    @include transition(background-color 0.2s $animation-curve-default);
  }
}

// radio buttons
// .class input[type="radio"]

// hide browser styles
@mixin hide-radio {
  display: none;
  width: 0;
  height: 0;
  margin: 0;
  padding: 0;
  border: 0;
  opacity: 0;
  @include appearance(none);
}

// & + label::before
@mixin radio-button($nightmode: false) {
  display: inline-block;
  height: 16px;
  width: 16px;
  margin-top: 3px;
  margin-right: 4px;
  @if ($nightmode) {
    border: 2px solid $dark-secondary-text !important;
  } @else {
    border: 2px solid $light-secondary-text;
  }
  border-radius: 50%;
  content: "";
  cursor: pointer;
}

// &:checked + label::before
@mixin radio-checked {
  border-color: $primary;
  background-image: radial-gradient(circle, $primary 50%, transparent 50%);
  background-position: 50% 50%;
  background-repeat: no-repeat;
  @include animation(radio-toggle 0.2s $animation-curve-default);
}

@mixin radio-disabled($nightmode: false) {
  @if ($nightmode) {
    border-color: $dark-disabled-text !important;
  } @else {
    border-color: $light-disabled-text;
  }
  cursor: auto;
}

// RES toggle switches
.res-nightmode .toggleButton {
  background-color: rgba($white, .3);

  &.enabled { background-color: $light-primary; }

  // off
  &:not(.enabled)::before { background-color: get-color('grey', '400'); }

  // on
  &.enabled::before { background-color: $light-primary; }
}

.toggleButton {
  width: 36px;
  height: 14px;
  border-radius: 14px;
  background-color: $light-hint-text;

  &.enabled { background-color: $primary; }

  // circular thumb switch
  &::before {
    top: 0 !important;
    height: 20px;
    width: 20px;
    border: 0 !important;
    border-radius: 50% !important;
    opacity: 1 !important;
    @include drop-shadow(1);
  }

  // off
  &:not(.enabled)::before {
    left: 0 !important;
    background-color: $light-background;
  }

  // on
  &.enabled::before {
    left: unset !important;
    right: 0 !important;
    background-color: $dark-primary;
    opacity: 1 !important;
  }

  // hide RES default button styles
  .toggleOn,
  .toggleOff {
    display: none;
  }
}