/**
 * need to provide width of tooltip after content is added
 * need to provide width of object to which the pseudoelement is attached
 * need to provide text within tooltip
 * default for 20x20 icons
 */

$tooltip-selector-map: (
  // sidebar
  twitter-button: (
		selector-name: 'a[href$="#twitter-btn"]',
		width-tooltip: 44,
		width-parent: 50,
    height-parent: 50,
		content-tooltip: 'Twitter',
    screen-type: 'desktop',
  ),
  lastfm-button: (
		selector-name: 'a[href$="#lastfm-btn"]',
		width-tooltip: 48,
		width-parent: 50,
    height-parent: 50,
		content-tooltip: 'Last.fm',
    screen-type: 'desktop',
  ),
  steam-button: (
		selector-name: 'a[href$="#steam-btn"]',
		width-tooltip: 42,
		width-parent: 50,
    height-parent: 50,
		content-tooltip: 'Steam',
    screen-type: 'desktop',
  ),
  irc-button: (
		selector-name: 'a[href$="#irc-btn"]',
		width-tooltip: 26,
		width-parent: 50,
    height-parent: 50,
		content-tooltip: 'IRC',
    screen-type: 'desktop',
  ),

  // sidecontentbox
  clear-all-button: (
    selector-name: '.sidecontentbox .gadget .right a',
		background-position: -116px 0,
		background-night-position: -134px 0,
		width-tooltip: 58,
		width-parent: 20,
		content-tooltip: 'Clear all',
    screen-type: 'desktop',
  )
);

$base-tooltip-selectors: ();
$spritesheet-tooltip-selectors: ();
$default-height-selectors: ();

$height-tooltip: 32px;
$padding-tooltip: 16px;
$font-size-tooltip: 14px;

@each $key, $map in $tooltip-selector-map {
	$selector-name: map-get($map, selector-name);
	$background-position: map-get($map, background-position);
	$background-night-position: map-get($map, background-night-position);
	$width-tooltip: map-get($map, width-tooltip);
	$width-parent: map-get($map, width-parent);
  $height-parent: map-get($map, height-parent);
	$content-tooltip: map-get($map, content-tooltip);
  $screen-type: map-get($map, screen-type);

  $base-tooltip-selectors: append($base-tooltip-selectors, unquote('#{$selector-name}'), 'comma');

  @if $screen-type == desktop {
    $height-tooltip: 32px;
    $padding-tooltip: 16px;
    $font-size-tooltip: 14px;
  } @else {
    $height-tooltip: 22px;
    $padding-tooltip: 8px;
    $font-size-tooltip: 10px;
  }

  // if the height of the parent element is not default 20px
  @if $height-parent {
    #{$selector-name}:hover::after {
      @include transform(translateY($height-parent - 20px + 14px));
    }
  } @else {
    $default-height-selectors: append($default-height-selectors, unquote('#{$selector-name}'), 'comma');
  }

  // if item contains background-position key, it is using a stylesheet icon
  @if $background-position {
    $spritesheet-tooltip-selectors: append($spritesheet-tooltip-selectors, unquote('#{$selector-name}'), 'comma');
  }

	#{$selector-name} {
		background-position: $background-position;

    &::after {
      right: (($width-tooltip + (2 * $padding-tooltip)) - $width-parent) / 2;
      width: $width-tooltip + (2 * $padding-tooltip);
      content: $content-tooltip;
    }
	}

	.res-nightmode #{$selector-name} {
		background-position: $background-night-position;
	}
}

#{$spritesheet-tooltip-selectors} {
  background-image: url(%%spritesheet%%) !important;
}

#{$default-height-selectors} {
  &:hover::after {
    @include transform(translateY(14px));
  }
}

#{$base-tooltip-selectors} {

  &::after {
    position: relative;
    z-index: 10;
    display: block;
    height: $height-tooltip;
    padding: 0 $padding-tooltip;
    visibility: hidden;
    color: $dark-text;
    font-size: $font-size-tooltip;
    font-weight: normal;
    line-height: $height-tooltip;
    text-align: center;
    background-color: rgba($tooltip, 0);
    border-radius: 2px;
    @include transition-default;
  }

  &:hover::after {
    visibility: visible;
    background-color: $tooltip;
  }
}
