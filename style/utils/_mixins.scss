// shadows

// Focus shadow mixin.
@mixin focus-shadow() {
  box-shadow: 0 0 8px rgba(0,0,0,.18),0 8px 16px rgba(0,0,0,.36);
}

@mixin drop-shadow($depth) {
  @if $depth == 0 {
    box-shadow: none;
  }
  @if $depth == 1 { // 2 dp
    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, $shadow-key-umbra-opacity),
                0px 2px 2px 0px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
                0px 1px 5px 0px rgba(0, 0, 0, $shadow-ambient-shadow-opacity) !important;
  }
  @if $depth == 2 { // 3 dp
    box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, $shadow-key-umbra-opacity),
                0px 3px 4px 0px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
                0px 1px 8px 0px rgba(0, 0, 0, $shadow-ambient-shadow-opacity) !important;
  }
  @if $depth == 3 { // 4 dp
    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, $shadow-key-umbra-opacity),
                0px 4px 5px 0px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
                0px 1px 10px 0px rgba(0, 0, 0, $shadow-ambient-shadow-opacity) !important;
  }
  @if $depth == 4 { // 6 dp
    box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, $shadow-key-umbra-opacity),
                0px 6px 10px 0px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
                0px 1px 18px 0px rgba(0, 0, 0, $shadow-ambient-shadow-opacity) !important;
  }
  @if $depth == 5 { // 8 dp
    box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, $shadow-key-umbra-opacity),
                0px 8px 10px 1px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
                0px 3px 14px 2px rgba(0, 0, 0, $shadow-ambient-shadow-opacity) !important;
  }
  @if $depth == 6 { // 16 dp
    box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, $shadow-key-umbra-opacity),
                0px 16px 24px 2px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
                0px 6px 30px 5px rgba(0, 0, 0, $shadow-ambient-shadow-opacity) !important;
  }
}

@mixin ripple($orig-background-color: transparent, $ripple-color: $light-primary) {
  background: $orig-background-color radial-gradient(circle, rgba($ripple-color, 0.3) 15%, transparent 30%) no-repeat 50% 50% / 0 !important; // color image repeat position size
  @include transition(background 0.3s $animation-curve-linear-out-slow-in, color 0.6s $animation-curve-linear-out-slow-in !important);

  &:focus {
    outline: 0;
    background-size: 1000% !important;
  }
}

@mixin material-animation-fast-out-slow-in($duration:0.2s) {
  transition-duration: $duration;
  transition-timing-function: $animation-curve-fast-out-slow-in;
}

@mixin material-animation-linear-out-slow-in($duration:0.2s) {
  transition-duration: $duration;
  transition-timing-function: $animation-curve-linear-out-slow-in;
}

@mixin material-animation-fast-out-linear-in($duration:0.2s) {
  transition-duration: $duration;
  transition-timing-function: $animation-curve-fast-out-linear-in;
}

@mixin material-animation-default($duration:0.2s) {
  transition-duration: $duration;
  transition-timing-function: $animation-curve-default;
}

@mixin transition-default($value: all 0.2s $animation-curve-default) {
  @include transition($value);
}

// burger
@mixin burger($width, $height, $gutter, $border-radius, $color: set-text-color($light-primary, hint-text)) {
  $burger-height: $height;
  $burger-gutter: $gutter;
  position: relative;

  &, &::before, &::after {
    display: block;
    width: $width;
    height: $height;
    background-color: $color;
    @include transition-default;
    @if $border-radius != 0 {
      border-radius: $border-radius;
    }
  }

  &::before, &::after {
    position: absolute;
    content: '';
  }

  &::before { top: -($height + $gutter); }

  &::after { top: $height + $gutter; }
}

// link hover effect
@mixin link-underline-transition {
  background: linear-gradient(to top, $primary 50%, transparent 50%);
  background-size: 100% 200%;
  background-position: 0 0;
  background-repeat: no-repeat;
  will-change: background-position;

  &:hover {
    color: set-text-color($primary, text) !important;
    text-decoration: none;
    background-position: 0 100%;
  }
}

// stickied links/menus addon
// link/menu, image type, loop counter passthrough
@mixin sticky-image-switch ($sticky-type, $image, $counter) {
  $sticky-selector: awesome;
  $sticky-selector-night: awesome;

  @if $sticky-type == 'link' {
    $sticky-selector: '.titlebox blockquote p:nth-of-type(#{$counter})';
    $sticky-selector-night: '.res-nightmode .titlebox blockquote p:nth-of-type(#{$counter})'
  } @else if $sticky-type == 'menu' {
    $sticky-selector: '.titlebox blockquote ul:nth-of-type(#{$counter})';
    $sticky-selector-night: '.res-nightmode .titlebox blockquote ul:nth-of-type(#{$counter})'
  }

  @if $image == 'album' {
    #{$sticky-selector} { background-position: $album-bgp; }
    #{$sticky-selector-night} { background-position: $album-night-bgp; }
  }

  @if $image == 'notice' {
    #{$sticky-selector} { background-position: $notice-bgp; }
    #{$sticky-selector-night} { background-position: $notice-night-bgp; }
  }

  @if $image == 'calendar' {
    #{$sticky-selector} { background-position: $calendar-bgp; }
    #{$sticky-selector-night} { background-position: $calendar-night-bgp; }
  }

  @if $image == 'help' {
    #{$sticky-selector} { background-position: $help-bgp; }
    #{$sticky-selector-night} { background-position: $help-night-bgp; }
  }

  @if $image == 'info' {
    #{$sticky-selector} { background-position: $info-bgp; }
    #{$sticky-selector-night} { background-position: $info-night-bgp; }
  }

  @if $image == 'media' {
    #{$sticky-selector} { background-position: $media-bgp; }
    #{$sticky-selector-night} { background-position: $media-night-bgp; }
  }

  @if $image == 'shows' {
    #{$sticky-selector} { background-position: $shows-bgp; }
    #{$sticky-selector-night} { background-position: $shows-night-bgp; }
  }

  @if $image == 'townhall' {
    #{$sticky-selector} { background-position: $townhall-bgp; }
    #{$sticky-selector-night} { background-position: $townhall-night-bgp; }
  }
}
